# Problem1
# Given an array of size N containing only 0s, 1s, and 2s; sort the array in ascending order.
def BubbleSort(a):
    for i in range(len(a)):
        for j in range(i+1,len(a)):
            if a[j-1] > a[j]:
                temp = a[j]
                a[j] = a[j-1]
                a[j-1] = temp
    return a
print(BubbleSort([0,2,1,0,2]))
print(BubbleSort([0,1,0]))

# Problem2
# Given an array of size N-1 such that it only contains distinct integers in the range of 1 to N. Find the missing element.
def BubbleSort(a,n):
    for i in range(len(a)):
        for j in range(i+1,len(a)):
            if a[j-1] > a[j]:
                temp = a[j]
                a[j] = a[j-1]
                a[j-1] = temp
    
    i = 1
    j = 0
    while i <= n:
        if i != a[j]:
            return i
        j+=1
        i+=1
    return None
print(BubbleSort([1,2,3,5],5))
print(BubbleSort([6,1,2,8,3,4,7,10,5],10))

# Problem3
# Given an array A of N elements. Find the majority element in the array. A majority element in an 
# array A of size N is an element that appears strictly more than N/2 times in the array.
def MajorityElement(list):
    dict = {}
    for i in range(len(list)):
        if list[i] not in dict:
            dict[list[i]] = 1
        else:
            dict[list[i]] += 1
    
    max = 0
    ele = -1
    for keys,values in dict.items():
        if dict[keys] > max and dict[keys] != 1:
            max = values
            ele = keys
    
    return ele

print(MajorityElement([1,2,3]))
print(MajorityElement([3,1,3,3,2]))

# Problem4
# Find the union of two array
def FindUnion(a,b):
    ele1 = ele2 = 0
    for i in range(len(a)):
        if a[i] not in b:
            ele1+=1
    return ele1 + len(b)
            
print(FindUnion([85 ,25, 1 ,32, 54, 6],[85, 2]))
print(FindUnion([1,2,3,4,5],[1,2,3]))

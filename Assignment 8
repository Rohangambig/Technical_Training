1...

# Problem1
# find the repeating number and find the missing number
def FindMissedNumber(list):
    list  = sorted(list)
    i = 0
    while i>=0:
        if i+1 !=  list[i]:
            return i+1
        i+=1
    return -1

def RepeatNumber(list):
    dict = {}
    for i in list:
        if i not in dict:
            dict[i] = 1
        else:
            dict[i]+=1
    
    for keys,values in dict.items():
        if values != 1 :
            return keys
    return -1
def FindNumber(list):
    return [FindMissedNumber(list),RepeatNumber(list)]
print(FindNumber([2,2]))
print(FindNumber([1,3,3]))


2...

# problem2
# Find the number
def FindIndex(list,n):
    a = b = -1
    for i in range(len(list)):
            if list[i-1] != n and list[i] == n:
                a = b =  i 
            elif list[i] == n and list[i+1] != n:
                b = i
    return [a,b]
print(FindIndex([1, 3, 5, 5, 5, 5, 67, 123, 125],5))
print(FindIndex([ 1, 3, 5, 5, 5, 5, 7, 123, 125 ],7))
print(FindIndex([ 1, 3, 5, 5, 5, 5, 7, 123, 125 ],1))
print(FindIndex([ 1, 3, 5, 5, 5, 5, 7, 123, 125 ],125))

3...
# problem3
'''Given a sorted array of positive integers. Your task is to rearrange the array elements alternatively
i.e first element should be max value, second should be min value, third should be second max, fourth should
be second min and so on.Note: Modify the original array itself. Do it without using any extra space. You do
not have to return anything.
'''

def FindList(list):
    low = 0
    high = len(list)-1
    new_list = []
    while low <= high:
        if low == high:
            new_list.append(list[high])
            break
        else:
            new_list.append(list[high])
            new_list.append(list[low])
        low +=1
        high -=1
    
    return new_list         
print(FindList([1,2,3,4,5,6]))
print(FindList([10,20,30,40,50,60,70,80,90,100,110]))

4...

# Probelm4
'''Given two sorted arrays arr1 and arr2 of size N and M respectively and an element K.
The task is to find the element that would be at the kth position of the final sorted array. 
'''
def Merge(arr1,arr2,n):
    i = j = 0
    final_list = []
    while i < len(arr1) and j < len(arr2):
        if arr1[i] < arr2[j]:
            final_list.append(arr1[i])
            i+=1
        else:
            final_list.append(arr2[j])
            j+=1
    while i < len(arr1):
        final_list.append(arr1[i])
        i+=1
    
    while j < len(arr2):
        final_list.append(arr2[j])
        j+=1

    return final_list[n-1]
print(Merge([2, 3, 6, 7, 9],[1, 4, 8, 10],5))
print(Merge([100, 112, 256, 349, 770],[72, 86, 113, 119, 265, 445, 892],7))
